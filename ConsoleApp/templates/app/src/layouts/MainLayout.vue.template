<script setup lang="ts">
import MenuItemLeftMenu from '../components/MenuItemLeftMenu.vue';
import MenuItemMainMenu from '../components/MenuItemMainMenu.vue';
import { ref, Suspense } from 'vue'
import { RouterView, useRouter, useRoute } from 'vue-router';

const leftDrawerOpen = ref(true);

function toggleLeftDrawer() {
    leftDrawerOpen.value = !leftDrawerOpen.value
}

</script>

<template>
    <q-layout view="hhh lpr lFr">

        <q-header elevated class="bg-primary text-white" height-hint="98">
            <q-toolbar>
                <q-btn dense flat round icon="menu" @click="toggleLeftDrawer" />

                <q-toolbar-title>
                    <q-avatar>
                        <img src="https://cdn.quasar.dev/logo-v2/svg/logo-mono-white.svg">
                    </q-avatar>
                </q-toolbar-title>
            </q-toolbar>

            <q-tabs align="left">
                <menu-item-main-menu
                    v-for="(childRoute, index) in useRouter().options.routes"  :key="index"
                    :route="childRoute" 
                    :menuLevel="1"
                    :renderSubLevelCount="1">
                </menu-item-main-menu>
            </q-tabs>
        </q-header>

        <q-drawer show-if-above v-model="leftDrawerOpen" side="left" behavior="desktop" bordered :width="200">
            <q-scroll-area class="fit">
                <q-list>
                    <menu-item-left-menu
                        v-for="(route, index) in (useRoute().matched.slice(-2).shift()?.children)" :key="index"
                        :route="route"
                        :menuLevel="2"
                        :renderSubLevelCount="5"
                    >
                    </menu-item-left-menu>
                </q-list> 
            </q-scroll-area>
        </q-drawer>

        <q-page-container>
            <RouterView v-slot="{ Component }">
                <template v-if="Component">
                    <Suspense>
                        <component :is="Component"></component>
                        <template #fallback>
                            ... LOADING ...
                        </template>
                    </Suspense>
                </template>
            </RouterView>
        </q-page-container>

    </q-layout>
</template>
